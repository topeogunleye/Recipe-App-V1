{"version":3,"sources":["useFetchMealDbApi.js","Header.js","MealInfo.js","App.js","index.js"],"names":["dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useFetchMealDbApi","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","didCancel","a","axios","result","fetchMeals","Header","query","setQuery","meals","doFetch","className","onSubmit","event","preventDefault","value","onChange","target","id","map","meal","to","idMeal","src","strMealThumb","alt","strMeal","data-mealid","MealInfo","mealID","useParams","ingredients","setIngredients","history","useHistory","console","log","ingredientsData","i","push","createIngredientsArray","onClick","go","strCategory","strArea","strInstructions","ing","uuidv4","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c3e8112.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return { ...state, isLoading: false, isError: true };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetchMealDbApi = (initialUrl, initialData) => {\n  // const [data, setData] = useState(initialData);\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchMeals = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n      // setIsError(false);\n      // setIsLoading(true);\n\n      try {\n        const result = await axios(url);\n        // setData(result.data);\n\n        if (!didCancel) {\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n        dispatch({ type: 'FETCH_FAILURE' });\n        // setIsError(true);\n        }\n      }\n      // setIsLoading(false);\n    };\n\n    fetchMeals();\n\n    return () => {\n      didCancel = true;\n    }\n  }, [url]);\n\n  // return [{ data, isLoading, isError },state, setUrl, setUrl];\n  return [state, setUrl];\n};\n\nexport default useFetchMealDbApi;\n","import { SearchIcon, RefreshIcon } from '@heroicons/react/solid';\nimport React, { Fragment, useState } from 'react';\nimport useFetchMealDbApi from './useFetchMealDbApi';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  const [query, setQuery] = useState('');\n  const [\n    { data, isLoading, isError },\n    doFetch,\n  ] = useFetchMealDbApi(\n    'https://www.themealdb.com/api/json/v1/1/search.php?s=chicken',\n    { meals: [] }\n  );\n  // const [mealID, setMealID] = useState('');\n\n\n  // const getMealInfoAttribute = (e) => {\n  //   const mealIDData = e.target.getAttribute('data-mealid' );\n  //   setMealID(mealIDData);\n  //   console.log(mealIDData);\n  //   // getMealByID(mealID);\n  // }\n\n  return (\n    <Fragment>\n      <div className=\"bg-gray-900 text-white min-h-screen\">\n        <div className=\"m-auto max-w-3xl flex flex-col items-center justify-center text-center\">\n          <h1 className=\"font-black text-2xl\">Meal Finder</h1>\n          <div className=\"flex mt-2\">\n            <form\n              className=\"flex\"\n              onSubmit={(event) => {\n                doFetch(\n                  `https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`\n                );\n\n                event.preventDefault();\n              }}\n            >\n              <input\n                type=\"text\"\n                value={query}\n                onChange={(event) => setQuery(event.target.value)}\n                className=\"border rounded-l sm:w-full text-black\"\n              />\n              <button className=\"search-btn border rounded-r\" type=\"submit\">\n                <SearchIcon className=\"h-5 w-5 text-gray-900\" />\n              </button>\n            </form>\n            <button\n              className=\"random-btn border rounded cursor-pointer ml-2.5\"\n              id=\"random\"\n            >\n              <RefreshIcon className=\"h-5 w-5 text-gray-900\" />\n            </button>\n          </div>\n\n          {isError && <div>Something went wrong ...</div>}\n          {!data.meals && <div>There is no result. Try again!</div>}\n          {/* {data.meals && <h1>{query}</h1> } */}\n          {isLoading ? (\n            <div>Loading ...</div>\n          ) : (\n            <div id=\"meals\" className=\"meals\">\n              {data.meals &&\n                data.meals.map((meal) => (\n                  \n                  <div className=\"meal\" key={meal.idMeal}>\n                    <Link to ={`/MealInfo/${meal.idMeal}`}>\n                      <img\n                        className=\"meal-img\"\n                        src={meal.strMealThumb}\n                        alt={meal.strMeal}\n                      />\n                    <div className=\"meal-info\" data-mealid={meal.idMeal}>\n                      <h3>{meal.strMeal}</h3>\n                    </div>\n                    </Link>\n                  </div>\n                ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import { useParams } from 'react-router';\nimport useFetchMealDbApi from './useFetchMealDbApi';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useHistory } from 'react-router-dom';\n\nconst MealInfo = () => {\n  const { mealID } = useParams();\n  const [ingredients, setIngredients] = useState('');\n  const history = useHistory();\n\n  const [{ data, isLoading, isError }, doFetch] = useFetchMealDbApi();\n\n  useEffect(\n    () =>\n      doFetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealID}`),\n    [doFetch, mealID, data]\n  );\n\n  function createIngredientsArray(meal) {\n    const ingredientsData = [];\n    for (let i = 1; i <= 20; i++) {\n      if (meal[`strIngredient${i}`]) {\n        ingredientsData.push(\n          `${meal[`strIngredient${i}`]} - ${meal[`strMeasure${i}`]}`\n        );\n      } else {\n        break;\n      }\n    }\n\n    setIngredients(ingredientsData);\n  }\n\n  console.log(ingredients);\n\n  if (data && ingredients === '') {\n    console.log(data);\n    const meal = data.meals[0];\n    createIngredientsArray(meal);\n  }\n\n  return (\n    <div className=\"bg-gray-900 text-white relative\">\n      <div className=\"m-auto max-w-3xl flex flex-col items-center justify-center text-center bg-gray-900 text-white\">\n        <div id=\"single-meal\">\n          {isError && <div>Something went wrong ...</div>}\n          {isLoading ? (\n            <div className=\"min-h-screen\">Loading ...</div>\n          ) : (\n            ingredients &&\n            data && (\n              <div\n                className=\"single-meal my-8 mx-auto w-3/4\"\n                key={data.meals[0].idMeal}\n              >\n                <h1>{data.meals[0].strMeal}</h1>\n                <button\n                  className=\"absolute top-1 left-1 sm:top-4 sm:left-4 hover:bg-white hover:text-black bg-gray-800 py-1 px-1 sm:py-2 sm:px-4\"\n                  onClick={() => {\n                    history.go(-1);\n                  }}\n                >\n                  &laquo; Go Back\n                </button>\n                <img\n                  className=\"single-meal-img\"\n                  src={data.meals[0].strMealThumb}\n                  alt={data.meals[0].strMeal}\n                />\n                <div className=\"single-meal-info\">\n                  <p>{data.meals[0].strCategory}</p>\n                  <p>{data.meals[0].strArea}</p>\n                </div>\n                <div className=\"main\">\n                  <p className=\"single-meal-p\">\n                    {data.meals[0].strInstructions}\n                  </p>\n                  <h2>Ingredients</h2>\n                  <ul className=\"single-meal-ul\">\n                    {ingredients.map((ing) => (\n                      <li className=\"single-meal-ul-li\" key={uuidv4()}>\n                        {ing}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MealInfo;\n","import Header from './Header';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport MealInfo from './MealInfo';\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n          </Route>\n          <Route path=\"/MealInfo/:mealID\">\n            <MealInfo />\n          </Route>\n        </Switch> \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}